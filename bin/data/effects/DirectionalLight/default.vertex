#version 330 core

// Input vertex data, different for all executions of this shader.
 layout(location = 0) in vec3 vertexPosition;
 layout(location = 1) in vec2 vertexUV;
 layout(location = 2) in vec3 vertexColor;
 layout(location = 3) in vec3 vertexNormal;

uniform mat4 Projection;
uniform mat4 View;

uniform mat4 Scale;
uniform mat4 Rotation;
uniform mat4 Translation;

out vec2 UV;
out vec3 Color;
out vec3 Normal;

void main()
{

	mat4 Model = Translation * Rotation * Scale;
	mat4 MVP = Projection * View * Model;

	vec4 Pos = MVP * vec4(vertexPosition,1);

	gl_Position = Pos;
	
	UV = vec2(vertexUV.x,-vertexUV.y);

	Color = vertexColor;

	Normal = vertexNormal;

}

